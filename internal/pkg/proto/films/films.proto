syntax = "proto3";
option go_package = "internal/pkg/films/delivery/grpc/generated";

import "codes.proto";

message Nothing {
 codes.StatusCode Status= 1;
};

message KeyWord {
  string Word = 1;
}

message Season {
  int64 Num = 1;
  repeated string Src = 2;
  repeated string Pics = 3;

}

message Film {
  string  Id = 1;
  string Title =2;
  repeated string Genres =3;
  string Country =4;
  int64  Year =5;
  string ReleaseRus =6;
  repeated string Director =7;
  repeated string Authors =8;
  repeated string Actors =9;
  string Release =10;
  int64 Duration =11;
  string  ReleaseRusLanguage =12;
  string  Budget =13;
  int64 Age =14;
  repeated string Pic =15;
  repeated string Src =16;
  string  Description =17;
  bool IsSeries =18;
  repeated Season Seasons = 19;
  codes.StatusCode Status= 20;
  float Rating = 21;
  bool NeedsPayment = 22;
  string Slug = 23;
}

message Films {
  repeated Film Data = 1;
  codes.StatusCode Status= 2;
}

message Pair {
  string FilmUUID = 1;
  string UserUUID = 2;
}

message RatingPair {
  string FilmUUID = 1;
  string UserUUID = 2;
  float Rating = 3;
}


message UUID {
  string id = 1;
}

service FilmsService {
  rpc FilmByGenre(KeyWord) returns (Films) {}
  rpc FilmBySelection(KeyWord) returns (Films) {}
  rpc FilmsByActor(UUID) returns (Films) {}
  rpc FilmById(UUID) returns (Film) {}
  rpc FilmsByUser(UUID) returns (Films) {}
  rpc FilmStartSelection(UUID) returns (Films) {}
  rpc AddStarred(Pair) returns (Nothing) {}
  rpc RemoveStarred(Pair) returns (Nothing) {}
  rpc AddWatchList(Pair) returns (Nothing) {}
  rpc RemoveWatchList(Pair) returns (Nothing) {}
  rpc Starred(UUID) returns (Films) {}
  rpc IfStarred(Pair) returns (Nothing) {}
  rpc WatchList(UUID) returns (Films) {}
  rpc IfWatchList(Pair) returns (Nothing) {}
  rpc Random(Nothing) returns (Film) {}
  rpc SetRating(RatingPair) returns (Nothing) {}
  rpc GetRating(UUID) returns (Film) {}
}
